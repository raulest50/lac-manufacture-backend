
# at first i had planed this app to be multicontainer so i wanted at first to use docker and
# host a sql database and a spring app. but now i changed my mind. Currently i want to
# host spring app as a instance web app on render and having my db as a separate entity
# i'm gessing this is going to improve and facilitate the dev and deployment cycle. so therefore
# this file has to be removed but instead i renamed it and kept it for future reference just in case.


services:
  spring-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-app
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - mysql
      #mysql:
      #  condition: service_healthy
    environment:
      MYSQL_DATABASE: 'lacm-planta'
      MYSQL_USER: 'spring'
      MYSQL_PASSWORD: 'la1234'
      MYSQL_ROOT_PASSWORD: 'la1234'
    networks:
        - app-network
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: 'lacm-planta'
      MYSQL_USER: 'spring'
      MYSQL_PASSWORD: 'la1234'
      MYSQL_ROOT_PASSWORD: 'la1234'
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    #healthcheck:
    #  test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
    #  interval: 3s
    #  timeout: 30s
    #  retries: 10

volumes:
  mysql_data:

networks:
    app-network:


    #environment:
    #  - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/lacm-planta?createDatabaseIfNotExist=true
    #  - SPRING_DATASOURCE_USERNAME=root
    #  - SPRING_DATASOURCE_PASSWORD=la1234



